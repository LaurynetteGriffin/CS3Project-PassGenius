# -*- coding: utf-8 -*-
"""Password Generator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qWAfWOums3Pem2GPojznhDX7a6oHP_yS
"""

import random
import string

class PasswordGenerator:
    def __init__(self, length, num_digits, num_uppercase, num_special, exclude_chars=None, easy_to_type=False):
        #initializing 
        self.length = length
        self.num_digits = num_digits
        self.num_uppercase = num_uppercase
        self.num_special = num_special
        self.exclude_chars = exclude_chars if exclude_chars else []
        self.easy_to_type = easy_to_type
        
    def generate_password(self):
        password = []
        
        # Add required number of digits
        for _ in range(self.num_digits):
            password.append(random.choice(string.digits))
        
        # Add required number of uppercase letters
        for _ in range(self.num_uppercase):
            password.append(random.choice(string.ascii_uppercase))
        
        # Add required number of special characters
        for _ in range(self.num_special):
            password.append(random.choice(string.punctuation))
        
        # Add remaining characters
        while len(password) < self.length:
            if self.easy_to_type:
                char_pool = string.ascii_lowercase + string.digits
            else:
                char_pool = string.ascii_letters + string.digits + string.punctuation
                
            char = random.choice(char_pool)
            
            if char not in password and char not in self.exclude_chars:
                password.append(char)
        
        # Shuffle password to randomize character order
        random.shuffle(password)
        
        return ''.join(password)